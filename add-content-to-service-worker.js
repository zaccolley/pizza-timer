// Adds two variables to the service-worker file
// VERSION: The version from the package.json
// FILE_PATHS: The files generated by Webpack

console.info('\nAdding variables to built service-worker.js file.\n');

const replaceInFile = require('replace-in-file');
const stats = require('./build/stats.json');
const packageJson = require('./package.json');

const STATIC_PATHS = [
  'favicon.ico',
  'manifest.json'
];

const generatedFilePaths = stats.assets.map(asset => asset.name).filter(file => {
  const inAssetsFolder = file.startsWith('assets/');
  const isntServiceWorker = !file.includes('service-worker.js');
  const isJavaScriptFile = file.endsWith('.js');
  const isCSSFile = file.endsWith('.css');

  return isntServiceWorker && (inAssetsFolder || isJavaScriptFile || isCSSFile);
});

const injectedFilePathsString = generatedFilePaths.concat(STATIC_PATHS)
  .sort()
  .map(filePath => `  "/${filePath}"`)
  .join(',\n');

const VERSION = `"${packageJson.version}"`;
const FILE_PATHS = `[
  ${injectedFilePathsString}
]`.trim();

replaceInFile({
  files: 'build/service-worker.js',
  from: 'const VERSION = "development";',
  to: `const VERSION = ${VERSION};`
}).then(() => {
  return replaceInFile({
    files: 'build/service-worker.js',
    from: 'const FILE_PATHS = [];',
    to: `const FILE_PATHS = ${FILE_PATHS};`
  })
}).catch(error => {
  console.error('Something went wrong adding variables to service-worker.js', error);
});